name: Deploy Nginx

on:
  workflow_dispatch:
    inputs:
      target_server:
        description: "Select the server to deploy Nginx"
        required: true
        default: "DEV"
        type: choice
        options:
          - DEV
          - BETA
          - PROD

jobs:
  deploy-nginx:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Environment Variables Based on Target Server
        run: |
          case "${{ github.event.inputs.target_server }}" in
            DEV)
              echo "CONFIG_FILE=nginx.dev.conf" >> $GITHUB_ENV
              echo "SERVER_HOST=${{ secrets.SSH_DEV_HOST }}" >> $GITHUB_ENV
              echo "SERVER_USER=${{ secrets.SSH_DEV_USERNAME }}" >> $GITHUB_ENV
              ;;
            BETA)
              echo "CONFIG_FILE=nginx.beta.conf" >> $GITHUB_ENV
              echo "SERVER_HOST=${{ secrets.SSH_BETA_HOST }}" >> $GITHUB_ENV
              echo "SERVER_USER=${{ secrets.SSH_BETA_USERNAME }}" >> $GITHUB_ENV
              ;;
            PROD)
              echo "CONFIG_FILE=nginx.prod.conf" >> $GITHUB_ENV
              echo "SERVER_HOST=${{ secrets.SSH_PROD_HOST }}" >> $GITHUB_ENV
              echo "SERVER_USER=${{ secrets.SSH_PROD_USERNAME }}" >> $GITHUB_ENV
              ;;
            *)
              echo "‚ùå Invalid server selection!"
              exit 1
              ;;
          esac

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Nginx Docker Image
        run: |
          docker build --no-cache -t faithfulconnects/nginx:${{ github.event.inputs.target_server }} ./nginx
          docker push faithfulconnects/nginx:${{ github.event.inputs.target_server }}

      - name: Deploy Nginx on Server (Rolling Update)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SERVER_HOST }}
          username: ${{ env.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "üîπ Installing Docker if missing..."
            if ! command -v docker &> /dev/null; then
              curl -fsSL https://get.docker.com | sh
              sudo systemctl start docker
              sudo systemctl enable docker
              sudo usermod -aG docker $USER
              echo "üîπ Added user to Docker group. Restarting shell..."
              newgrp docker  # Apply changes immediately
            fi

            echo "üîπ Ensuring Docker network exists..."
            docker network inspect ubuntu_fcn-network >/dev/null 2>&1 || docker network create ubuntu_fcn-network

            echo "üîπ Checking and Freeing Port 80 if in Use..."
            if sudo lsof -i :80 | grep LISTEN; then
                echo "‚ö†Ô∏è Port 80 is in use. Stopping process..."
                sudo fuser -k 80/tcp || true
            fi

            echo "üîπ Pulling latest Nginx image..."
            docker pull faithfulconnects/nginx:${{ github.event.inputs.target_server }}

            echo "üîπ Checking if Nginx container already exists..."
            NGINX_CONTAINER_ID=$(docker ps -aq -f name=nginx)

            if [ -n "$NGINX_CONTAINER_ID" ]; then
                if [ -n "$(docker ps -q -f name=nginx)" ]; then
                    echo "üîπ Nginx is running. Performing a rolling update..."
                    docker-compose up -d --no-deps --force-recreate nginx
                else
                    echo "üîπ Nginx container exists but is stopped. Removing and restarting..."
                    docker stop nginx || true
                    docker rm nginx || true
                    docker run -d --name nginx -p 80:80 -p 443:443 \
                      -e NGINX_CONFIG=${{ env.CONFIG_FILE }} \
                      -v /etc/letsencrypt:/etc/letsencrypt:ro \
                      --network ubuntu_fcn-network \
                      --restart unless-stopped \
                      faithfulconnects/nginx:${{ github.event.inputs.target_server }}
                fi
            else
                echo "üîπ No Nginx container found. Starting a new one..."
                docker run -d --name nginx -p 80:80 -p 443:443 \
                  -e NGINX_CONFIG=${{ env.CONFIG_FILE }} \
                  -v /etc/letsencrypt:/etc/letsencrypt:ro \
                  --network ubuntu_fcn-network \
                  --restart unless-stopped \
                  faithfulconnects/nginx:${{ github.event.inputs.target_server }}
            fi

            echo "‚úÖ Nginx deployment completed on ${{ github.event.inputs.target_server }}!"
