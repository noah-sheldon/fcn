name: Deploy Nginx

on:
  workflow_dispatch:
    inputs:
      target_server:
        description: "Select the server to deploy Nginx"
        required: true
        default: "DEV"
        type: choice
        options:
          - DEV
          - BETA
          - PROD

jobs:
  deploy-nginx:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Environment Variables Based on Target Server
        run: |
          case "${{ github.event.inputs.target_server }}" in
            DEV)
              echo "ENV_TAG=nginx_dev" >> $GITHUB_ENV
              echo "SERVER_HOST=${{ secrets.SSH_DEV_HOST }}" >> $GITHUB_ENV
              echo "SERVER_USER=${{ secrets.SSH_DEV_USERNAME }}" >> $GITHUB_ENV
              ;;
            BETA)
              echo "ENV_TAG=nginx_beta" >> $GITHUB_ENV
              echo "SERVER_HOST=${{ secrets.SSH_BETA_HOST }}" >> $GITHUB_ENV
              echo "SERVER_USER=${{ secrets.SSH_BETA_USERNAME }}" >> $GITHUB_ENV
              ;;
            PROD)
              echo "ENV_TAG=nginx_prod" >> $GITHUB_ENV
              echo "SERVER_HOST=${{ secrets.SSH_PROD_HOST }}" >> $GITHUB_ENV
              echo "SERVER_USER=${{ secrets.SSH_PROD_USERNAME }}" >> $GITHUB_ENV
              ;;
            *)
              echo "‚ùå Invalid server selection!"
              exit 1
              ;;
          esac

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Nginx Docker Image
        run: |
          docker build --build-arg ENV=${{ github.event.inputs.target_server }} \
            -t faithfulconnects/${{ env.ENV_TAG }} ./nginx
          docker push faithfulconnects/${{ env.ENV_TAG }}

      - name: Deploy Nginx on Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SERVER_HOST }}
          username: ${{ env.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "üîπ Ensuring Docker network exists..."
            docker network ls | grep "fcn-network" || docker network create fcn-network

            echo "üîπ Pulling latest Nginx image..."
            docker pull faithfulconnects/${{ env.ENV_TAG }}

            echo "üîπ Checking if Nginx is already running..."
            if [ "$(docker ps -q -f name=nginx)" ]; then
                echo "üîπ Stopping existing Nginx container..."
                docker stop nginx
                docker rm nginx
            fi

            echo "üîπ Running new Nginx container..."
            docker run -d --name nginx -p 80:80 -p 443:443 \
              --network fcn-network \
              --restart unless-stopped \
              -v /etc/letsencrypt:/etc/letsencrypt \
              -v /var/lib/letsencrypt:/var/lib/letsencrypt \
              faithfulconnects/${{ env.ENV_TAG }}


            echo "‚úÖ Nginx deployment completed on ${{ github.event.inputs.target_server }}!"
